[{"C:\\Users\\test\\shoppingcart\\src\\App.jsx":"1","C:\\Users\\test\\shoppingcart\\src\\Item\\Item.styles.js":"2","C:\\Users\\test\\shoppingcart\\src\\Item\\Item.jsx":"3","C:\\Users\\test\\shoppingcart\\src\\Cart\\Cart.jsx":"4","C:\\Users\\test\\shoppingcart\\src\\CartItem\\CartItem.jsx":"5"},{"size":2648,"mtime":1616870280337,"results":"6","hashOfConfig":"7"},{"size":508,"mtime":1616870097716,"results":"8","hashOfConfig":"7"},{"size":502,"mtime":1616870314505,"results":"9","hashOfConfig":"7"},{"size":765,"mtime":1616870334941,"results":"10","hashOfConfig":"7"},{"size":1059,"mtime":1616870349398,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1njhm1f",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Users\\test\\shoppingcart\\src\\App.jsx",[],"C:\\Users\\test\\shoppingcart\\src\\Item\\Item.styles.js",[],"C:\\Users\\test\\shoppingcart\\src\\Item\\Item.jsx",[],"C:\\Users\\test\\shoppingcart\\src\\Cart\\Cart.jsx",["24"],"import CartItem from \"../CartItem/CartItem\";\r\n//styles\r\nimport { Wrapper } from \"./Cart.Styles\";\r\n//types\r\nimport { CartItemType } from \"../App\";\r\n\r\nconst Cart = ({ cartItems, addToCart, removeFromCart }) => {\r\n  const calculateTotal = (items) =>\r\n    items.reduce((ack, item) => ack + item.amount * item.price, 0);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <h2>Your Shopping Cart</h2>\r\n      {cartItems.length === 0 ? <p>No items in cart.</p> : null}\r\n      {cartItems.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          item={item}\r\n          addToCart={addToCart}\r\n          removeFromCart={removeFromCart}\r\n        />\r\n      ))}\r\n      <h3>Total amount: ${calculateTotal(cartItems).toFixed(2)}</h3>\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default Cart;\r\n","C:\\Users\\test\\shoppingcart\\src\\CartItem\\CartItem.jsx",["25"],"import Button from \"@material-ui/core/Button\";\r\n//types\r\nimport { CartItemType } from \"../App\";\r\n//styles\r\nimport { Wrapper } from \"./CartItem.Styles\";\r\n\r\nconst CartItem = ({ item, addToCart, removeFromCart }) => {\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <h3>{item.title}</h3>\r\n        <div className=\"information\">\r\n          <p>Price: ${item.price}</p>\r\n          <p>Total: ${(item.amount * item.price).toFixed(2)}</p>\r\n        </div>\r\n        <div className=\"buttons\">\r\n          <Button\r\n            size=\"small\"\r\n            disableElevation\r\n            variant=\"contained\"\r\n            onClick={() => removeFromCart(item.id)}\r\n          >\r\n            -\r\n          </Button>\r\n          <p>{item.amount}</p>\r\n          <Button\r\n            size=\"small\"\r\n            disableElevation\r\n            variant=\"contained\"\r\n            onClick={() => addToCart(item)}\r\n          >\r\n            +\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <img src={item.image} alt={item.title} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n",{"ruleId":"26","severity":1,"message":"27","line":5,"column":10,"nodeType":"28","messageId":"29","endLine":5,"endColumn":22},{"ruleId":"26","severity":1,"message":"27","line":3,"column":10,"nodeType":"28","messageId":"29","endLine":3,"endColumn":22},"no-unused-vars","'CartItemType' is defined but never used.","Identifier","unusedVar"]